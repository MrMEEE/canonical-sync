#!/bin/bash

CONFIG=~/.ppa-sync-ppas
SYNCS=~/.ppa-sync-syncs

AVAILABLECHANNELS=()

containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

usage()
{
cat << EOF
usage: $0 options

This script syncs repositories from Ubuntu Mirrors

OPTIONS:
   -h      Show this message
   -A      Add PPA (ppa:<user>/<ppa>)
   -a      Sync channel
   -r      Removes Sync of channel
   -R      Remove PPA (ppa:<user>/<ppa>)
   -c      Specify Channel to sync to
   -l	   Lists available channels
   -v      Verbose
EOF
}

if [ ! -f $CONFIG ]; then
	touch $CONFIG
fi

while getopts “:ha:A:vlr:R:c:” OPTION;do
     case $OPTION in
         h)
             usage
             exit 0
             ;;
         A)
             ADDPPA=$OPTARG
	     ACTION="ADDPPA"
             ;;
         a)
             ADDCHANNEL=$OPTARG
             ACTION="ADDCHANNEL"
             ;;
         R)
             RMPPA=$OPTARG
             ACTION="RMPPA"
             ;;
         r)
             RMCHANNEL=$OPTARG
             ACTION="RMCHANNEL"
             ;;
         c)
             SYNCCHANNEL=$OPTARG
             ;;
         l)	
             ACTION="LIST"
             ;;
         v)
             VERBOSE=1
             ;;
         *)
             usage
             exit 0
             ;;
     esac
done

while read PPA ; do
	
	    PPAPATH=`echo $PPA | sed 's/ppa://g'`
	    AVAILABLECHANNELS+=("##########################")
	    AVAILABLECHANNELS+=("$PPAPATH:")
	    AVAILABLECHANNELS+=("##########################")
	    
	    PPAFILE=ppa-`echo $PPAPATH | sed 's/\//-/g'`-dirlist
	    
	    curl -s http://ppa.launchpad.net/$PPAPATH/ubuntu/dists/ |grep DIR | cut -f7 -d\> | cut -f1 -d\< | sed 's/\///g' |grep -v "Parent Directory" > /tmp/$PPAFILE
	    
	    while read dist ; do
		  
		  curl -s http://ppa.launchpad.net/$PPAPATH/ubuntu/dists/$dist/ |grep DIR | cut -f7 -d\> | cut -f1 -d\< | sed 's/\///g' |grep -v "Parent Directory" > /tmp/$dist-$PPAFILE
		  
		  while read repo ; do
		  
			curl -s http://ppa.launchpad.net/$PPAPATH/ubuntu/dists/$dist/$repo/ |grep DIR | cut -f7 -d\> | cut -f1 -d\< | sed 's/\///g' |grep -v "Parent Directory" > /tmp/$dist-$repo-$PPAFILE
			
			while read arch ; do
			
			      AVAILABLECHANNELS+=($PPAPATH:$dist-$repo-$arch)
			      
			done < /tmp/$dist-$repo-$PPAFILE
		  
		  done < /tmp/$dist-$PPAFILE
		  
	    done < /tmp/$PPAFILE
	
done < $CONFIG


case $ACTION in

    "ADDPPA")
	
	echo $ADDPPA | grep -q '^ppa:\+\.*.\+\/\+\.*.'
	STATUS=$?
	if [[ $STATUS == "0" ]]; then
	    PPAPATH=`echo $ADDPPA | sed 's/ppa://g'`
	    wget -q -O /tmp/ppa-test http://ppa.launchpad.net/$PPAPATH
	    STATUS=$?
	    if [[ $STATUS == "0" ]]; then
		REGEX="^$ADDPPA$"
		cat $CONFIG | grep -q $REGEX
		STATUS=$?
		if [[ $STATUS == "0" ]];then
		    echo "$ADDPPA: is already added"
		else
		    echo $ADDPPA >> $CONFIG
		    echo "$ADDPPA: was added."
		
		fi
	    else
		echo "$ADDPPA: doesn't exist at launchpad.net"
	    fi
	else
	    echo "$ADDPPA: is an invalid PPA format, please specify as: ppa:<user>/<ppa>"
	fi
	
    ;;
    "RMPPA")
	
    ;;
    "LIST")
	
	for CHANNEL in "${AVAILABLECHANNELS[@]}"; do
	    echo "$CHANNEL"
	done
    
    ;;
    
    "ADDCHANNEL")
    
	if containsElement "$ADDCHANNEL" "${AVAILABLECHANNELS[@]}"; then
	    if [[ $SYNCCHANNEL == "" ]];then
		echo "Please define the channel to sync to ( -c parameter )"
	    else
		REGEX="'^$SYNCCHANNEL$"
		spacecmd -q softwarechannel_list |grep -q $REGEX
		if [[ $? != "0" ]]; then
		    echo "Sync channel does not exist"
		else
		    echo "Adding $ADDCHANNEL to sync"
		    echo "$ADDCHANNEL%$SYNCCHANNEL" >> $SYNCS
		fi
	    fi
	    
	else
	    echo "Unknown channel"
	fi
    ;;
    
    
esac